{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/nordTheme.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","m","module","exports","require","default","nordTheme","baseFontSize","baseLineHeight","scaleRatio","googleFonts","name","styles","headerFontFamily","bodyFontFamily","bodyColor","headerWeight","bodyWeight","boldWeight","overrideStyles","_ref","options","adjustFontSizeTo","scale","rhythm","h1,h2,h3,h4,h5,h6","lineHeight","p","margin","color","textDecoration","a:hover,a:active","blockquote","Object","assign","fontStyle","paddingLeft","marginLeft","borderLeft","blockquote > :last-child","marginBottom","blockquote cite","fontWeight","blockquote cite:before","content","__webpack_require__","d","__webpack_exports__","typography","Typography","react__WEBPACK_IMPORTED_MODULE_0__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","json","Layout","header","_this$props","children","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","style","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","fontFamily","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-dc75054fd1ae8f069962.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const nordTheme = {\n    title: 'Nord',\n    baseFontSize: '18px',\n    baseLineHeight: '1.8',\n    scaleRatio: 2,\n    googleFonts: [\n        {\n            name: 'Rubik',\n            styles: ['400']\n        }\n    ],\n    headerFontFamily: ['Rubik', 'sans-serif'],\n    bodyFontFamily: ['Rubik', 'sans-serif'],\n    bodyColor: '#434C5E',\n    headerWeight: 700,\n    bodyWeight: 400,\n    boldWeight: 400,\n    overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n        'h1,h2,h3,h4,h5,h6': {\n            lineHeight: 1.2\n        },\n        p: {\n            margin: '1em 0',\n        },\n        a: {\n            color: '#5E81AC',\n            textDecoration: 'underline'\n        },\n        'a:hover,a:active': {\n            color: '#81A1C1',\n        },\n        blockquote: {\n            ...scale(1 / 5),\n            color: '#4C566A',\n            fontStyle: 'italic',\n            paddingLeft: rhythm(13 / 16),\n            marginLeft: 0,\n            borderLeft: `${rhythm(3 / 16)} solid #4C566A`\n        },\n        'blockquote > :last-child': {\n            marginBottom: 0\n        },\n        'blockquote cite': {\n            ...adjustFontSizeTo(options.baseFontSize),\n            color: options.bodyColor,\n            fontWeight: options.bodyWeight\n        },\n        'blockquote cite:before': {\n            content: '\"â€” \"'\n        }\n    })\n}\n\nexport default nordTheme","import Typography from 'typography'\nimport nordTheme from './nordTheme'\n\nconst typography = new Typography(nordTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer style={{ marginTop: '3em' }}>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>. Using{' '}\n          <a href=\"https://github.com/andersonmadeira/typography-theme-nord\">\n            Nord\n          </a>{' '}\n          theme.\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `pt-br`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}