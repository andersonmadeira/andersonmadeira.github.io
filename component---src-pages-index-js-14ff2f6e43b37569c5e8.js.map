{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/nordTheme.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_components_bio__WEBPACK_IMPORTED_MODULE_2__","map","_ref","node","frontmatter","fields","slug","key","style","marginTop","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","date","readingTime","text","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","m","module","exports","require","default","nordTheme","baseFontSize","baseLineHeight","scaleRatio","googleFonts","name","styles","headerFontFamily","bodyFontFamily","bodyColor","headerWeight","bodyWeight","boldWeight","overrideStyles","options","adjustFontSizeTo","scale","rhythm","h1,h2,h3,h4,h5,h6","lineHeight","p","margin","color","textDecoration","a:hover,a:active","blockquote","Object","assign","fontStyle","paddingLeft","marginLeft","borderLeft","blockquote > :last-child","blockquote cite","fontWeight","blockquote cite:before","content","__webpack_require__","d","__webpack_exports__","typography","Typography","react__WEBPACK_IMPORTED_MODULE_0__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","json","Layout","header","_this$props","children","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","fontFamily","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","property","author","concat","defaultProps","socialIconStyle","height","width","Bio","_public_static_d_2524125176_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","react__WEBPACK_IMPORTED_MODULE_2___default","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","flexDirection","react_social_icons__WEBPACK_IMPORTED_MODULE_3__","target","url","linkedin","github","bgColor","twitter"],"mappings":"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","file":"component---src-pages-index-js-14ff2f6e43b37569c5e8.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Artigos\" />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug} style={{ marginTop: '1.5em' }}>\n              <header style={{ marginBottom: 5 }}>\n                <h3\n                  style={{\n                    marginBottom: 0\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>\n                  {node.frontmatter.date} - {node.fields.readingTime.text}\n                </small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt\n                  }}\n                  style={{ marginBottom: 10 }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const nordTheme = {\n    title: 'Nord',\n    baseFontSize: '18px',\n    baseLineHeight: '1.8',\n    scaleRatio: 2,\n    googleFonts: [\n        {\n            name: 'Rubik',\n            styles: ['400']\n        }\n    ],\n    headerFontFamily: ['Rubik', 'sans-serif'],\n    bodyFontFamily: ['Rubik', 'sans-serif'],\n    bodyColor: '#434C5E',\n    headerWeight: 700,\n    bodyWeight: 400,\n    boldWeight: 400,\n    overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n        'h1,h2,h3,h4,h5,h6': {\n            lineHeight: 1.2\n        },\n        p: {\n            margin: '1em 0',\n        },\n        a: {\n            color: '#5E81AC',\n            textDecoration: 'underline'\n        },\n        'a:hover,a:active': {\n            color: '#81A1C1',\n        },\n        blockquote: {\n            ...scale(1 / 5),\n            color: '#4C566A',\n            fontStyle: 'italic',\n            paddingLeft: rhythm(13 / 16),\n            marginLeft: 0,\n            borderLeft: `${rhythm(3 / 16)} solid #4C566A`\n        },\n        'blockquote > :last-child': {\n            marginBottom: 0\n        },\n        'blockquote cite': {\n            ...adjustFontSizeTo(options.baseFontSize),\n            color: options.bodyColor,\n            fontWeight: options.bodyWeight\n        },\n        'blockquote cite:before': {\n            content: '\"— \"'\n        }\n    })\n}\n\nexport default nordTheme","import Typography from 'typography'\nimport nordTheme from './nordTheme'\n\nconst typography = new Typography(nordTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer style={{ marginTop: '3em' }}>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>. Using{' '}\n          <a href=\"https://github.com/andersonmadeira/typography-theme-nord\">\n            Nord\n          </a>{' '}\n          theme.\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `pt-br`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { SocialIcon } from \"react-social-icons\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst socialIconStyle = { height: 30, width: 30, marginRight: 10 }\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            linkedin\n            github\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(1.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <p style={{ marginBottom: 5 }}>\n          Full Stack Developer. Here I write about code and related\n          technologies.\n        </p>\n        <div>\n          <SocialIcon\n            style={socialIconStyle}\n            target=\"_blank\"\n            url={social.linkedin}\n          />\n          <SocialIcon\n            style={socialIconStyle}\n            target=\"_blank\"\n            url={social.github}\n            bgColor=\"#000\"\n          />\n          <SocialIcon\n            style={socialIconStyle}\n            target=\"_blank\"\n            url={social.twitter}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n"],"sourceRoot":""}